version: '0.2'
source: null
info:
  name: hakqey
  author: hak53q
  version: 1.0.0
  description: ''
analysis:
  classifier:
    竖钩: 5
    竖提: 6
    横折提: 6
    竖折: 6
    横折折: 6
    竖弯: 6
    横折弯: 6
    竖弯钩: 6
    横折弯钩: 6
    撇点: 6
    撇折: 6
    斜钩: 6
    横斜钩: 6
  degenerator:
    feature:
      提: 横
      捺: 点
    no_cross: false
  selector:
    - 结构完整
    - 根少优先
    - 能连不交
    - 能散不连
    - 全符笔顺
    - 取大优先
form:
  alphabet: qwertyuiopasdfghjklzxcvbnm
  grouping: {}
  mapping:
    '1': h
    '2': s
    '3': p
    '4': d
    '5': z
    '6': z
    心: q
    忄:
      element: 心
    "\ue051":
      element: 心
    㣺:
      element: 心
    鬼: q
    示: q
    卜: q
    ⺊:
      element: 卜
    非: q
    "\ue17b": q
    丄:
      element: "\ue17b"
    "\ue07c":
      element: "\ue17b"
    "\ue07d":
      element: "\ue17b"
    "\ue080":
      element: "\ue17b"
    火: w
    灬:
      element: 火
    "\ue42e":
      element: 火
    "\ue408":
      element: 火
    "\ue430":
      element: 火
    "\ue191":
      element: 火
    风: w
    風:
      element: 风
  mapping_space:
    "\ue0ed":
      - {value: {element: 鬼}, score: 0}
    鬼:
      - {value: {element: "\ue0ed"}, score: 0}
encoder:
  max_length: 4
  auto_select_length: 4
  short_code:
    - length_equal: 1
      schemes: [{prefix: 1}, {prefix: 2}, {prefix: 3}]
  rules:
    - length_equal: 2
      formula: AaAbBaBb
    - length_equal: 3
      formula: AaBaCaCb
    - length_in_range: [4, 10]
      formula: AaBaCaZa
  sources:
    s0:
      object: null
      next: s1
    s1:
      object: {type: 字根, rootIndex: 1}
      next: c0
    s2:
      object: {type: 字根, rootIndex: 2}
      next: c1
    s3:
      object: {type: 字根, rootIndex: 3}
      next: c5
    s4:
      object: {type: 字根, rootIndex: -1}
      next: null
    s5:
      object: {type: 固定, key: t}
      next: s7
    s6:
      object: {type: 特殊, subtype: 张码补码}
      next: c6
    s7:
      object: {type: 固定, key: 'y'}
      next: null
    s8:
      object: {type: 特殊, subtype: 张码补码}
      next: s10
    s9:
      object: {type: 特殊, subtype: 张码补码}
      next: s11
    s10:
      object: {type: 固定, key: t}
      next: null
    s11:
      object: {type: 固定, key: 'n'}
      next: c4
    s12:
      object: {type: 固定, key: p}
      next: null
    s13:
      object: {type: 特殊, subtype: 张码补码}
      next: null
    s14:
      object: {type: 固定, key: 'n'}
      next: null
  conditions:
    c0:
      object: {type: 字根, rootIndex: 2}
      operator: 存在
      positive: s2
      negative: c2
    c1:
      object: {type: 字根, rootIndex: 3}
      operator: 存在
      positive: s3
      negative: s6
    c2:
      object: {type: 汉字}
      operator: 匹配
      value: '[一二三四五六七八九]'
      positive: s5
      negative: c3
    c3:
      object: {type: 汉字}
      operator: 匹配
      positive: s8
      negative: s9
      value: '[言士舟马石鸟由光女乐西子力米古白水方民耳口日身立且工]'
    c4:
      object: {type: 汉字}
      operator: 匹配
      positive: s12
      negative: null
      value: '[丌丨丬丶丿亠亻冂冖冫凵刂勹匚卩厶囗夂宀屮巛廴廾彐彡忄扌攴攵氵灬犭疋疒礻糸纟艹衤讠辶钅阝饣虍彳]'
    c5:
      object: {type: 字根, rootIndex: 4}
      operator: 存在
      positive: s4
      negative: s13
    c6:
      object: {type: 特殊, subtype: 张码准码元}
      operator: 是
      positive: s14
      negative: null
      value: '1'
